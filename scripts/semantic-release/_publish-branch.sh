#!/bin/sh

default()
{
  SCRIPT=`basename $0`
  SCRIPT_DIR=`dirname $0`
  SCRIPT_DIR=`cd $SCRIPT_DIR; pwd`

  . $SCRIPT_DIR/../_env.sh
  . $SCRIPT_DIR/../_common.sh
  . $SCRIPT_DIR/_common.sh

  BUILD_DIR=$TRAVIS_BUILD_DIR
}

# Commit changes
#
commit()
{
  echo "*** Committing changes"
  cd $BUILD_DIR

  if [ -n "$COMMIT_DIST" -a -d "dist" ]; then
    git add dist --force
  fi
  if [ -n "$COMMIT_DIST_DEMO" -a -d "dist-demo" ]; then
    git add dist-demo --force
  fi
  if [ -n "$COMMIT_UPDATES" ]; then
    git add -u
  fi

  git commit -m "chore(release): updates generated by Travis build"
  check $? "git commit failure"
}

# Push generated files to dist branch
#
push_dist()
{
  echo "*** Pushing to $TRAVIS_BRANCH-dist"
  cd $BUILD_DIR

  # Push to dist branch
  EXISTING=`git ls-remote --heads https://github.com/$TRAVIS_REPO_SLUG.git $TRAVIS_BRANCH-dist`

  if [ -n "$EXISTING" ]; then
    git fetch upstream $TRAVIS_BRANCH-dist:$TRAVIS_BRANCH-dist # <remote-branch>:<local-branch>
    git checkout $TRAVIS_BRANCH-dist
    git merge -Xtheirs $TRAVIS_BRANCH-local --no-edit --ff
    check $? "git merge failure"

    git push upstream $TRAVIS_BRANCH-dist -v
  else
    git push upstream $TRAVIS_BRANCH-local:$TRAVIS_BRANCH-dist -v # <local-branch>:<remote-branch>
  fi
  check $? "git push failure"
}

# Check prerequisites before continuing
#
prereqs()
{
  merge_prereqs

  # Avoid creating a <branch>-dist equivalent for all branches added to the main repository
  if [ -z "$REPO_FORK" ]; then
    if [ ! "$TRAVIS_BRANCH" = "$RELEASE_BRANCH" -o "$TRAVIS_BRANCH" = "$NEXT_BRANCH" ]; then
      echo "*** Building against $TRAVIS_BRANCH and not the master or master-dist. Do not publish!"
      exit 0
    fi
  fi
}

usage()
{
cat <<- EEOOFF

    This script will commit changes and push to the master-dist branch.

    Note: Intended for use with Travis only.

    AUTH_TOKEN must be set via Travis CI.

    sh [-x] $SCRIPT [-h|f] -d|o|u

    Example: sh $SCRIPT -d

    OPTIONS:
    h       Display this message (default)
    d       Force commit dist directory
    o       Force commit dist-demo directory
    u       Commit updates

EEOOFF
}

# main()
{
  default

  while getopts hdou c; do
    case $c in
      h) usage; exit 0;;
      d) COMMIT_DIST=1;;
      o) COMMIT_DIST_DEMO=1;;
      u) COMMIT_UPDATES=1;;
      \?) usage; exit 1;;
    esac
  done

  prereqs
  git_setup
  commit
  push_dist
}
